"""initial schema

Revision ID: bf3c972be625
Revises: 
Create Date: 2025-08-01 16:45:59.922250

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'bf3c972be625'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('badges',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('icon_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('badge_type', sa.Enum('SKILL', 'ACHIEVEMENT', 'MILESTONE', 'RECOGNITION', 'CERTIFICATION', name='badgetype'), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('rarity', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('points_value', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('entity_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_badges_name'), 'badges', ['name'], unique=False)
    op.create_table('daily_stats',
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('new_users', sa.Integer(), nullable=False),
    sa.Column('active_users', sa.Integer(), nullable=False),
    sa.Column('returning_users', sa.Integer(), nullable=False),
    sa.Column('new_volunteers', sa.Integer(), nullable=False),
    sa.Column('active_volunteers', sa.Integer(), nullable=False),
    sa.Column('new_organizations', sa.Integer(), nullable=False),
    sa.Column('active_organizations', sa.Integer(), nullable=False),
    sa.Column('opportunities_created', sa.Integer(), nullable=False),
    sa.Column('opportunities_published', sa.Integer(), nullable=False),
    sa.Column('opportunities_viewed', sa.Integer(), nullable=False),
    sa.Column('opportunities_applied', sa.Integer(), nullable=False),
    sa.Column('applications_submitted', sa.Integer(), nullable=False),
    sa.Column('applications_accepted', sa.Integer(), nullable=False),
    sa.Column('applications_rejected', sa.Integer(), nullable=False),
    sa.Column('messages_sent', sa.Integer(), nullable=False),
    sa.Column('profiles_viewed', sa.Integer(), nullable=False),
    sa.Column('searches_performed', sa.Integer(), nullable=False),
    sa.Column('reviews_created', sa.Integer(), nullable=False),
    sa.Column('successful_matches', sa.Integer(), nullable=False),
    sa.Column('completed_opportunities', sa.Integer(), nullable=False),
    sa.Column('custom_data', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_daily_stats_date'), 'daily_stats', ['date'], unique=False)
    op.create_table('notification_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('hour', sa.Integer(), nullable=False),
    sa.Column('notification_type', sa.Enum('OPPORTUNITY_MATCH', 'APPLICATION_UPDATE', 'MESSAGE_RECEIVED', 'DEADLINE_REMINDER', 'SCHEDULE_UPDATE', 'SYSTEM_ANNOUNCEMENT', 'DONATION_RECEIVED', 'VOLUNTEER_JOINED', 'REVIEW_REQUEST', 'SKILL_VERIFIED', name='notificationtype'), nullable=False),
    sa.Column('platform', sa.Enum('WEB_PUSH', 'FCM_ANDROID', 'APNS_IOS', 'WEB_SOCKET', name='platformtype'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='notificationpriority'), nullable=False),
    sa.Column('sent_count', sa.Integer(), nullable=False),
    sa.Column('delivered_count', sa.Integer(), nullable=False),
    sa.Column('clicked_count', sa.Integer(), nullable=False),
    sa.Column('dismissed_count', sa.Integer(), nullable=False),
    sa.Column('failed_count', sa.Integer(), nullable=False),
    sa.Column('avg_delivery_time_ms', sa.Float(), nullable=True),
    sa.Column('click_through_rate', sa.Float(), nullable=True),
    sa.Column('delivery_rate', sa.Float(), nullable=True),
    sa.Column('unique_users_reached', sa.Integer(), nullable=False),
    sa.Column('new_subscriptions', sa.Integer(), nullable=False),
    sa.Column('unsubscriptions', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_analytics_date'), 'notification_analytics', ['date'], unique=False)
    op.create_table('notificationtemplate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('notification_type', sa.Enum('OPPORTUNITY_MATCH', 'APPLICATION_UPDATE', 'MESSAGE_RECEIVED', 'DEADLINE_REMINDER', 'SCHEDULE_UPDATE', 'SYSTEM_ANNOUNCEMENT', 'DONATION_RECEIVED', 'VOLUNTEER_JOINED', 'REVIEW_REQUEST', 'SKILL_VERIFIED', name='notificationtype'), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('title_template', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('body_template', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('default_priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='notificationpriority'), nullable=False),
    sa.Column('default_actions', sa.JSON(), nullable=True),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notificationtemplate_template_id'), 'notificationtemplate', ['template_id'], unique=True)
    op.create_table('performance_metrics',
    sa.Column('metric_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('metric_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('unit', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('endpoint', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('method', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('environment', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('stats_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_performance_metrics_metric_name'), 'performance_metrics', ['metric_name'], unique=False)
    op.create_index(op.f('ix_performance_metrics_metric_type'), 'performance_metrics', ['metric_type'], unique=False)
    op.create_index(op.f('ix_performance_metrics_timestamp'), 'performance_metrics', ['timestamp'], unique=False)
    op.create_table('users',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('display_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('role', sa.Enum('VOLUNTEER', 'ORGANIZATION', 'ADMIN', 'MODERATOR', name='userrole'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'SUSPENDED', 'PENDING_VERIFICATION', 'BANNED', name='userstatus'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('refresh_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reset_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('verification_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('last_activity', sa.DateTime(), nullable=True),
    sa.Column('login_count', sa.Integer(), nullable=False),
    sa.Column('privacy_settings', sa.JSON(), nullable=True),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('language_preference', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('theme_preference', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.Column('profile_completion', sa.Float(), nullable=False),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=False),
    sa.Column('user_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_status'), 'users', ['status'], unique=False)
    op.create_table('analytics_events',
    sa.Column('event_type', sa.Enum('USER_SIGNUP', 'USER_LOGIN', 'USER_LOGOUT', 'PROFILE_UPDATED', 'PROFILE_VIEWED', 'OPPORTUNITY_CREATED', 'OPPORTUNITY_PUBLISHED', 'OPPORTUNITY_VIEWED', 'OPPORTUNITY_APPLIED', 'OPPORTUNITY_BOOKMARKED', 'APPLICATION_SUBMITTED', 'APPLICATION_REVIEWED', 'APPLICATION_ACCEPTED', 'APPLICATION_REJECTED', 'APPLICATION_WITHDRAWN', 'MESSAGE_SENT', 'MESSAGE_READ', 'CONVERSATION_STARTED', 'SEARCH_PERFORMED', 'FILTER_APPLIED', 'SEARCH_RESULT_CLICKED', 'REVIEW_CREATED', 'SKILL_VERIFIED', 'BADGE_EARNED', 'ERROR_OCCURRED', 'PERFORMANCE_MEASURED', name='eventtype'), nullable=False),
    sa.Column('event_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('page_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('referrer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('browser', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('os', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('experiment_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('variant_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('event_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_analytics_events_event_name'), 'analytics_events', ['event_name'], unique=False)
    op.create_index(op.f('ix_analytics_events_event_type'), 'analytics_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_analytics_events_session_id'), 'analytics_events', ['session_id'], unique=False)
    op.create_index(op.f('ix_analytics_events_timestamp'), 'analytics_events', ['timestamp'], unique=False)
    op.create_index(op.f('ix_analytics_events_user_id'), 'analytics_events', ['user_id'], unique=False)
    op.create_table('demo_assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('asset_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scenarios_used', sa.JSON(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_demo_assets_asset_id'), 'demo_assets', ['asset_id'], unique=True)
    op.create_table('demo_scenarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scenario_type', sa.Enum('FULL_JOURNEY', 'FEATURE_SHOWCASE', 'WORKFLOW_DEMO', 'INTEGRATION_DEMO', 'PERFORMANCE_DEMO', 'ONBOARDING_DEMO', name='scenariotype'), nullable=False),
    sa.Column('target_audience', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'ARCHIVED', 'MAINTENANCE', name='scenariostatus'), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('difficulty_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('auto_play', sa.Boolean(), nullable=False),
    sa.Column('reset_data', sa.Boolean(), nullable=False),
    sa.Column('use_mock_data', sa.Boolean(), nullable=False),
    sa.Column('theme', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('show_annotations', sa.Boolean(), nullable=False),
    sa.Column('show_metrics', sa.Boolean(), nullable=False),
    sa.Column('base_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('api_endpoints', sa.JSON(), nullable=True),
    sa.Column('required_features', sa.JSON(), nullable=True),
    sa.Column('total_runs', sa.Integer(), nullable=False),
    sa.Column('success_rate', sa.Float(), nullable=False),
    sa.Column('average_duration', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_demo_scenarios_scenario_id'), 'demo_scenarios', ['scenario_id'], unique=True)
    op.create_table('demo_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scenario_type', sa.Enum('FULL_JOURNEY', 'FEATURE_SHOWCASE', 'WORKFLOW_DEMO', 'INTEGRATION_DEMO', 'PERFORMANCE_DEMO', 'ONBOARDING_DEMO', name='scenariotype'), nullable=False),
    sa.Column('template_data', sa.JSON(), nullable=True),
    sa.Column('default_settings', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_demo_templates_template_id'), 'demo_templates', ['template_id'], unique=True)
    op.create_table('file_uploads',
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('original_filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_type', sa.Enum('IMAGE', 'DOCUMENT', 'VIDEO', 'AUDIO', 'ARCHIVE', 'OTHER', name='filetype'), nullable=False),
    sa.Column('mime_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('UPLOADING', 'UPLOADED', 'PROCESSING', 'READY', 'ERROR', 'DELETED', name='filestatus'), nullable=False),
    sa.Column('processing_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('uploaded_by', sa.Integer(), nullable=False),
    sa.Column('visibility', sa.Enum('PRIVATE', 'PUBLIC', 'ORGANIZATION', 'VERIFIED_ONLY', name='filevisibility'), nullable=False),
    sa.Column('upload_category', sa.Enum('PROFILE_PICTURE', 'ORGANIZATION_LOGO', 'OPPORTUNITY_IMAGE', 'DOCUMENT', 'CERTIFICATE', 'SKILL_VERIFICATION', 'APPLICATION_ATTACHMENT', 'MESSAGE_ATTACHMENT', 'GENERAL', name='uploadcategory'), nullable=False),
    sa.Column('related_entity_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('related_entity_id', sa.Integer(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('thumbnail_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('variants', sa.JSON(), nullable=True),
    sa.Column('virus_scanned', sa.Boolean(), nullable=False),
    sa.Column('virus_scan_result', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('content_moderated', sa.Boolean(), nullable=False),
    sa.Column('moderation_result', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('last_accessed', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('alt_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('caption', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('entity_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['uploaded_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_uploads_status'), 'file_uploads', ['status'], unique=False)
    op.create_index(op.f('ix_file_uploads_upload_category'), 'file_uploads', ['upload_category'], unique=False)
    op.create_index(op.f('ix_file_uploads_uploaded_by'), 'file_uploads', ['uploaded_by'], unique=False)
    op.create_table('guided_tours',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tour_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tour_type', sa.Enum('ONBOARDING', 'FEATURE_INTRO', 'WORKFLOW_GUIDE', 'ADVANCED_FEATURES', 'TROUBLESHOOTING', 'UPDATES_SHOWCASE', name='tourtype'), nullable=False),
    sa.Column('target_role', sa.Enum('VOLUNTEER', 'ORGANIZATION', 'ADMIN', 'ALL', name='touruserrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_mandatory', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('min_user_level', sa.Integer(), nullable=False),
    sa.Column('required_features', sa.JSON(), nullable=True),
    sa.Column('trigger_conditions', sa.JSON(), nullable=True),
    sa.Column('entry_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('estimated_duration_minutes', sa.Integer(), nullable=False),
    sa.Column('theme', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('show_progress', sa.Boolean(), nullable=False),
    sa.Column('allow_skip', sa.Boolean(), nullable=False),
    sa.Column('auto_advance', sa.Boolean(), nullable=False),
    sa.Column('total_views', sa.Integer(), nullable=False),
    sa.Column('total_completions', sa.Integer(), nullable=False),
    sa.Column('average_completion_time', sa.Float(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_guided_tours_tour_id'), 'guided_tours', ['tour_id'], unique=True)
    op.create_table('notification_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('push_notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('email_notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('in_app_notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('opportunity_matches', sa.Boolean(), nullable=False),
    sa.Column('application_updates', sa.Boolean(), nullable=False),
    sa.Column('messages', sa.Boolean(), nullable=False),
    sa.Column('deadlines', sa.Boolean(), nullable=False),
    sa.Column('schedule_changes', sa.Boolean(), nullable=False),
    sa.Column('system_announcements', sa.Boolean(), nullable=False),
    sa.Column('donations', sa.Boolean(), nullable=False),
    sa.Column('volunteer_activity', sa.Boolean(), nullable=False),
    sa.Column('reviews', sa.Boolean(), nullable=False),
    sa.Column('skill_verifications', sa.Boolean(), nullable=False),
    sa.Column('quiet_hours_enabled', sa.Boolean(), nullable=False),
    sa.Column('quiet_hours_start', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('quiet_hours_end', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('digest_enabled', sa.Boolean(), nullable=False),
    sa.Column('digest_frequency', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('digest_day', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('digest_time', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mobile_notifications', sa.Boolean(), nullable=False),
    sa.Column('desktop_notifications', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_settings_user_id'), 'notification_settings', ['user_id'], unique=True)
    op.create_table('organisations',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mission', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mission_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('logo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cover_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('organization_type', sa.Enum('NGO', 'NONPROFIT', 'CHARITY', 'FOUNDATION', 'SOCIAL_ENTERPRISE', name='organizationtype'), nullable=False),
    sa.Column('causes', sa.JSON(), nullable=True),
    sa.Column('established_year', sa.Integer(), nullable=True),
    sa.Column('team_size', sa.Enum('SMALL', 'MEDIUM', 'LARGE', 'XLARGE', name='teamsizerange'), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('trust_score', sa.Float(), nullable=False),
    sa.Column('verification_documents', sa.JSON(), nullable=True),
    sa.Column('total_opportunities', sa.Integer(), nullable=False),
    sa.Column('active_opportunities', sa.Integer(), nullable=False),
    sa.Column('total_volunteers', sa.Integer(), nullable=False),
    sa.Column('total_applications', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('total_reviews', sa.Integer(), nullable=False),
    sa.Column('notification_settings', sa.JSON(), nullable=True),
    sa.Column('privacy_settings', sa.JSON(), nullable=True),
    sa.Column('profile_data', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organisations_country'), 'organisations', ['country'], unique=False)
    op.create_index(op.f('ix_organisations_email'), 'organisations', ['email'], unique=True)
    op.create_index(op.f('ix_organisations_location'), 'organisations', ['location'], unique=False)
    op.create_index(op.f('ix_organisations_name'), 'organisations', ['name'], unique=False)
    op.create_index(op.f('ix_organisations_user_id'), 'organisations', ['user_id'], unique=True)
    op.create_table('push_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.Enum('WEB_PUSH', 'FCM_ANDROID', 'APNS_IOS', 'WEB_SOCKET', name='platformtype'), nullable=False),
    sa.Column('endpoint', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('p256dh_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('auth_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('device_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('notification_types', sa.JSON(), nullable=True),
    sa.Column('quiet_hours_start', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('quiet_hours_end', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_push_subscriptions_endpoint'), 'push_subscriptions', ['endpoint'], unique=False)
    op.create_index(op.f('ix_push_subscriptions_subscription_id'), 'push_subscriptions', ['subscription_id'], unique=True)
    op.create_index(op.f('ix_push_subscriptions_user_id'), 'push_subscriptions', ['user_id'], unique=False)
    op.create_table('tour_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('category', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_role', sa.Enum('VOLUNTEER', 'ORGANIZATION', 'ADMIN', 'ALL', name='touruserrole'), nullable=False),
    sa.Column('template_data', sa.JSON(), nullable=True),
    sa.Column('default_settings', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tour_templates_template_id'), 'tour_templates', ['template_id'], unique=True)
    op.create_table('user_activity',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('sessions', sa.Integer(), nullable=False),
    sa.Column('page_views', sa.Integer(), nullable=False),
    sa.Column('time_spent_minutes', sa.Integer(), nullable=False),
    sa.Column('opportunities_viewed', sa.Integer(), nullable=False),
    sa.Column('applications_submitted', sa.Integer(), nullable=False),
    sa.Column('messages_sent', sa.Integer(), nullable=False),
    sa.Column('searches_performed', sa.Integer(), nullable=False),
    sa.Column('profiles_viewed', sa.Integer(), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=False),
    sa.Column('last_page', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('primary_device', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('browsers_used', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_activity_date'), 'user_activity', ['date'], unique=False)
    op.create_index(op.f('ix_user_activity_user_id'), 'user_activity', ['user_id'], unique=False)
    op.create_table('user_badges',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('badge_id', sa.Integer(), nullable=False),
    sa.Column('awarded_by', sa.Integer(), nullable=True),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('evidence_data', sa.JSON(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('valid_until', sa.Date(), nullable=True),
    sa.Column('revoked', sa.Boolean(), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_by', sa.Integer(), nullable=True),
    sa.Column('revoked_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('earned_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['awarded_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['badge_id'], ['badges.id'], ),
    sa.ForeignKeyConstraint(['revoked_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_badges_badge_id'), 'user_badges', ['badge_id'], unique=False)
    op.create_index(op.f('ix_user_badges_user_id'), 'user_badges', ['user_id'], unique=False)
    op.create_table('volunteers',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bio_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('skills', sa.JSON(), nullable=True),
    sa.Column('interests', sa.JSON(), nullable=True),
    sa.Column('languages', sa.JSON(), nullable=True),
    sa.Column('availability', sa.Enum('FULL_TIME', 'PART_TIME', 'WEEKENDS', 'FLEXIBLE', name='availabilitytype'), nullable=False),
    sa.Column('experience_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'EXPERT', name='experiencelevel'), nullable=False),
    sa.Column('time_commitment_hours', sa.Integer(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('total_reviews', sa.Integer(), nullable=False),
    sa.Column('completed_opportunities', sa.Integer(), nullable=False),
    sa.Column('active_applications', sa.Integer(), nullable=False),
    sa.Column('total_volunteer_hours', sa.Integer(), nullable=False),
    sa.Column('notification_preferences', sa.JSON(), nullable=True),
    sa.Column('privacy_settings', sa.JSON(), nullable=True),
    sa.Column('profile_data', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_volunteers_country'), 'volunteers', ['country'], unique=False)
    op.create_index(op.f('ix_volunteers_full_name'), 'volunteers', ['full_name'], unique=False)
    op.create_index(op.f('ix_volunteers_location'), 'volunteers', ['location'], unique=False)
    op.create_index(op.f('ix_volunteers_user_id'), 'volunteers', ['user_id'], unique=True)
    op.create_table('demo_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('runner_id', sa.Integer(), nullable=True),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('current_step', sa.Integer(), nullable=True),
    sa.Column('completed_steps', sa.JSON(), nullable=True),
    sa.Column('failed_steps', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('total_duration_seconds', sa.Integer(), nullable=True),
    sa.Column('browser', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('screen_resolution', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('error_logs', sa.JSON(), nullable=True),
    sa.Column('performance_metrics', sa.JSON(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('feedback', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('suggestions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['runner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['demo_scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_demo_runs_run_id'), 'demo_runs', ['run_id'], unique=True)
    op.create_index(op.f('ix_demo_runs_scenario_id'), 'demo_runs', ['scenario_id'], unique=False)
    op.create_index(op.f('ix_demo_runs_session_id'), 'demo_runs', ['session_id'], unique=False)
    op.create_table('demo_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('step_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('step_number', sa.Integer(), nullable=False),
    sa.Column('action_type', sa.Enum('CREATE_USER', 'LOGIN', 'NAVIGATE', 'FILL_FORM', 'CLICK_BUTTON', 'UPLOAD_FILE', 'SEND_MESSAGE', 'MAKE_PAYMENT', 'SUBMIT_APPLICATION', 'CREATE_OPPORTUNITY', 'REVIEW_APPLICATION', 'VERIFY_SKILL', 'GENERATE_REPORT', 'TRIGGER_NOTIFICATION', 'SIMULATE_OFFLINE', 'WAIT', 'ASSERT', name='actiontype'), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_element', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('target_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('form_data', sa.JSON(), nullable=True),
    sa.Column('expected_result', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('demo_user_type', sa.Enum('VOLUNTEER', 'ORGANIZATION', 'ADMIN', 'VISITOR', name='demousertype'), nullable=True),
    sa.Column('user_data', sa.JSON(), nullable=True),
    sa.Column('duration_seconds', sa.Integer(), nullable=False),
    sa.Column('wait_for_condition', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('skip_if_condition', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('show_highlight', sa.Boolean(), nullable=False),
    sa.Column('annotation_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('annotation_position', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('validation_rules', sa.JSON(), nullable=True),
    sa.Column('success_criteria', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('retry_on_failure', sa.Boolean(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('fallback_action', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('success_count', sa.Integer(), nullable=False),
    sa.Column('failure_count', sa.Integer(), nullable=False),
    sa.Column('average_execution_time', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['scenario_id'], ['demo_scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_demo_steps_scenario_id'), 'demo_steps', ['scenario_id'], unique=False)
    op.create_index(op.f('ix_demo_steps_step_id'), 'demo_steps', ['step_id'], unique=True)
    op.create_table('file_access_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('access_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('referrer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['file_id'], ['file_uploads.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_access_logs_file_id'), 'file_access_logs', ['file_id'], unique=False)
    op.create_index(op.f('ix_file_access_logs_user_id'), 'file_access_logs', ['user_id'], unique=False)
    op.create_table('file_permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('permission_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('granted_by', sa.Integer(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file_uploads.id'], ),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organisations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_permissions_file_id'), 'file_permissions', ['file_id'], unique=False)
    op.create_index(op.f('ix_file_permissions_organization_id'), 'file_permissions', ['organization_id'], unique=False)
    op.create_index(op.f('ix_file_permissions_user_id'), 'file_permissions', ['user_id'], unique=False)
    op.create_table('opportunities',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('org_id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('state', sa.Enum('DRAFT', 'ACTIVE', 'PAUSED', 'FILLED', 'CLOSED', name='opportunitystate'), nullable=False),
    sa.Column('featured', sa.Boolean(), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_ar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('remote_allowed', sa.Boolean(), nullable=False),
    sa.Column('causes', sa.JSON(), nullable=True),
    sa.Column('skills_required', sa.JSON(), nullable=True),
    sa.Column('skills_preferred', sa.JSON(), nullable=True),
    sa.Column('time_commitment', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('time_commitment_type', sa.Enum('ONE_TIME', 'WEEKLY', 'MONTHLY', 'FLEXIBLE', name='timecommitmenttype'), nullable=False),
    sa.Column('duration', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('schedule_flexibility', sa.Boolean(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('application_deadline', sa.Date(), nullable=True),
    sa.Column('volunteers_needed', sa.Integer(), nullable=False),
    sa.Column('volunteers_applied', sa.Integer(), nullable=False),
    sa.Column('volunteers_accepted', sa.Integer(), nullable=False),
    sa.Column('urgency', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='urgencylevel'), nullable=False),
    sa.Column('priority_score', sa.Float(), nullable=False),
    sa.Column('requirements', sa.JSON(), nullable=True),
    sa.Column('benefits', sa.JSON(), nullable=True),
    sa.Column('training_provided', sa.Boolean(), nullable=False),
    sa.Column('images', sa.JSON(), nullable=True),
    sa.Column('documents', sa.JSON(), nullable=True),
    sa.Column('application_questions', sa.JSON(), nullable=True),
    sa.Column('requires_background_check', sa.Boolean(), nullable=False),
    sa.Column('requires_interview', sa.Boolean(), nullable=False),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('application_success_rate', sa.Float(), nullable=False),
    sa.Column('average_match_score', sa.Float(), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('views_count', sa.Integer(), nullable=False),
    sa.Column('saved_count', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['org_id'], ['organisations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_opportunities_country'), 'opportunities', ['country'], unique=False)
    op.create_index(op.f('ix_opportunities_location'), 'opportunities', ['location'], unique=False)
    op.create_index(op.f('ix_opportunities_org_id'), 'opportunities', ['org_id'], unique=False)
    op.create_index(op.f('ix_opportunities_state'), 'opportunities', ['state'], unique=False)
    op.create_index(op.f('ix_opportunities_title'), 'opportunities', ['title'], unique=False)
    op.create_table('push_notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notification_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('body', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('badge', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notification_type', sa.Enum('OPPORTUNITY_MATCH', 'APPLICATION_UPDATE', 'MESSAGE_RECEIVED', 'DEADLINE_REMINDER', 'SCHEDULE_UPDATE', 'SYSTEM_ANNOUNCEMENT', 'DONATION_RECEIVED', 'VOLUNTEER_JOINED', 'REVIEW_REQUEST', 'SKILL_VERIFIED', name='notificationtype'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='notificationpriority'), nullable=False),
    sa.Column('actions', sa.JSON(), nullable=True),
    sa.Column('click_action', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'DELIVERED', 'FAILED', 'CLICKED', 'DISMISSED', name='notificationstatus'), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('clicked_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['subscription_id'], ['push_subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_push_notifications_notification_id'), 'push_notifications', ['notification_id'], unique=True)
    op.create_index(op.f('ix_push_notifications_user_id'), 'push_notifications', ['user_id'], unique=False)
    op.create_table('skill_verifications',
    sa.Column('volunteer_id', sa.Integer(), nullable=False),
    sa.Column('skill_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('skill_category', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('skill_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='skilllevel'), nullable=False),
    sa.Column('verification_method', sa.Enum('DOCUMENT', 'REFERENCE', 'TEST', 'PORTFOLIO', 'INTERVIEW', 'EXPERIENCE', name='verificationmethod'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', 'EXPIRED', 'REVOKED', name='verificationstatus'), nullable=False),
    sa.Column('supporting_documents', sa.JSON(), nullable=True),
    sa.Column('portfolio_links', sa.JSON(), nullable=True),
    sa.Column('reference_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reference_email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reference_organization', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reference_position', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reference_contacted', sa.Boolean(), nullable=False),
    sa.Column('experience_description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('experience_duration', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('experience_organization', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('test_score', sa.Float(), nullable=True),
    sa.Column('test_provider', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('test_certificate_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.Column('review_notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('valid_from', sa.Date(), nullable=False),
    sa.Column('valid_until', sa.Date(), nullable=True),
    sa.Column('auto_expire', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('featured', sa.Boolean(), nullable=False),
    sa.Column('entity_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['volunteer_id'], ['volunteers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_skill_verifications_skill_name'), 'skill_verifications', ['skill_name'], unique=False)
    op.create_index(op.f('ix_skill_verifications_status'), 'skill_verifications', ['status'], unique=False)
    op.create_index(op.f('ix_skill_verifications_volunteer_id'), 'skill_verifications', ['volunteer_id'], unique=False)
    op.create_table('tour_steps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('step_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tour_id', sa.Integer(), nullable=False),
    sa.Column('step_number', sa.Integer(), nullable=False),
    sa.Column('step_type', sa.Enum('HIGHLIGHT', 'TOOLTIP', 'MODAL', 'OVERLAY', 'ANIMATION', 'INTERACTION', 'NAVIGATION', 'FORM_FILL', name='steptype'), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_selector', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('target_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('position', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('offset_x', sa.Integer(), nullable=False),
    sa.Column('offset_y', sa.Integer(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('auto_advance_delay', sa.Integer(), nullable=True),
    sa.Column('required_interaction', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('validation_script', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('video_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('animation_config', sa.JSON(), nullable=True),
    sa.Column('next_step_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prev_step_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('skip_conditions', sa.JSON(), nullable=True),
    sa.Column('primary_button_text', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('primary_button_action', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('secondary_button_text', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('secondary_button_action', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=False),
    sa.Column('completion_count', sa.Integer(), nullable=False),
    sa.Column('skip_count', sa.Integer(), nullable=False),
    sa.Column('average_time_spent', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tour_id'], ['guided_tours.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tour_steps_step_id'), 'tour_steps', ['step_id'], unique=True)
    op.create_index(op.f('ix_tour_steps_tour_id'), 'tour_steps', ['tour_id'], unique=False)
    op.create_table('user_tour_progress',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tour_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('NOT_STARTED', 'IN_PROGRESS', 'COMPLETED', 'SKIPPED', 'PAUSED', name='tourstatus'), nullable=False),
    sa.Column('current_step', sa.Integer(), nullable=True),
    sa.Column('completed_steps', sa.JSON(), nullable=True),
    sa.Column('skipped_steps', sa.JSON(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('last_accessed_at', sa.DateTime(), nullable=True),
    sa.Column('total_time_spent', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('feedback', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('suggested_improvements', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('browser', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_experience_level', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tour_id'], ['guided_tours.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_tour_progress_tour_id'), 'user_tour_progress', ['tour_id'], unique=False)
    op.create_index(op.f('ix_user_tour_progress_user_id'), 'user_tour_progress', ['user_id'], unique=False)
    op.create_table('applications',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('volunteer_id', sa.Integer(), nullable=False),
    sa.Column('opportunity_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED', 'UNDER_REVIEW', 'RECOMMENDED', 'INTERVIEW_SCHEDULED', 'INTERVIEWING', 'INTERVIEW_COMPLETED', 'BACKGROUND_CHECK', 'ACCEPTED', 'REJECTED', 'WITHDRAWN', 'EXPIRED', name='applicationstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='applicationpriority'), nullable=False),
    sa.Column('cover_letter', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('motivation', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('relevant_experience', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('application_responses', sa.JSON(), nullable=True),
    sa.Column('uploaded_documents', sa.JSON(), nullable=True),
    sa.Column('match_score', sa.Float(), nullable=False),
    sa.Column('compatibility_factors', sa.JSON(), nullable=True),
    sa.Column('submitted_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reviewed_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('interview_scheduled_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('decision_made_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('reviewer_id', sa.Integer(), nullable=True),
    sa.Column('review_notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('feedback_to_volunteer', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rejection_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('interview_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('interview_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('interview_notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('interview_rating', sa.Float(), nullable=True),
    sa.Column('background_check_required', sa.Boolean(), nullable=False),
    sa.Column('background_check_status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('background_check_notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('references', sa.JSON(), nullable=True),
    sa.Column('references_contacted', sa.Boolean(), nullable=False),
    sa.Column('last_contact_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('contact_attempts', sa.Integer(), nullable=False),
    sa.Column('custom_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunities.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['volunteer_id'], ['volunteers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('volunteer_id', 'opportunity_id', name='unique_volunteer_opportunity')
    )
    op.create_index(op.f('ix_applications_opportunity_id'), 'applications', ['opportunity_id'], unique=False)
    op.create_index(op.f('ix_applications_status'), 'applications', ['status'], unique=False)
    op.create_index(op.f('ix_applications_volunteer_id'), 'applications', ['volunteer_id'], unique=False)
    op.create_table('demo_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('hour', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('step_id', sa.Integer(), nullable=True),
    sa.Column('total_runs', sa.Integer(), nullable=False),
    sa.Column('successful_runs', sa.Integer(), nullable=False),
    sa.Column('failed_runs', sa.Integer(), nullable=False),
    sa.Column('aborted_runs', sa.Integer(), nullable=False),
    sa.Column('avg_duration_seconds', sa.Float(), nullable=True),
    sa.Column('avg_step_completion_time', sa.Float(), nullable=True),
    sa.Column('success_rate', sa.Float(), nullable=True),
    sa.Column('unique_runners', sa.Integer(), nullable=False),
    sa.Column('repeat_runners', sa.Integer(), nullable=False),
    sa.Column('browser_breakdown', sa.JSON(), nullable=True),
    sa.Column('device_breakdown', sa.JSON(), nullable=True),
    sa.Column('error_types', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['scenario_id'], ['demo_scenarios.id'], ),
    sa.ForeignKeyConstraint(['step_id'], ['demo_steps.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_demo_analytics_date'), 'demo_analytics', ['date'], unique=False)
    op.create_index(op.f('ix_demo_analytics_scenario_id'), 'demo_analytics', ['scenario_id'], unique=False)
    op.create_table('demo_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('feedback_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('session_info', sa.JSON(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('admin_response', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['demo_runs.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['demo_scenarios.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_demo_feedback_scenario_id'), 'demo_feedback', ['scenario_id'], unique=False)
    op.create_table('notification_delivery_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('notification_id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.Enum('WEB_PUSH', 'FCM_ANDROID', 'APNS_IOS', 'WEB_SOCKET', name='platformtype'), nullable=False),
    sa.Column('attempt_number', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'DELIVERED', 'FAILED', 'CLICKED', 'DISMISSED', name='notificationstatus'), nullable=False),
    sa.Column('response_code', sa.Integer(), nullable=True),
    sa.Column('response_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('delivery_time_ms', sa.Integer(), nullable=True),
    sa.Column('error_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('error_details', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('attempted_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['push_notifications.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_delivery_logs_notification_id'), 'notification_delivery_logs', ['notification_id'], unique=False)
    op.create_table('tour_analytics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('hour', sa.Integer(), nullable=False),
    sa.Column('tour_id', sa.Integer(), nullable=False),
    sa.Column('step_id', sa.Integer(), nullable=True),
    sa.Column('user_role', sa.Enum('VOLUNTEER', 'ORGANIZATION', 'ADMIN', 'ALL', name='touruserrole'), nullable=False),
    sa.Column('device_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('browser', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('views', sa.Integer(), nullable=False),
    sa.Column('starts', sa.Integer(), nullable=False),
    sa.Column('completions', sa.Integer(), nullable=False),
    sa.Column('skips', sa.Integer(), nullable=False),
    sa.Column('drop_offs', sa.Integer(), nullable=False),
    sa.Column('avg_time_per_step', sa.Float(), nullable=True),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('user_satisfaction', sa.Float(), nullable=True),
    sa.Column('load_time_ms', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['step_id'], ['tour_steps.id'], ),
    sa.ForeignKeyConstraint(['tour_id'], ['guided_tours.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tour_analytics_date'), 'tour_analytics', ['date'], unique=False)
    op.create_index(op.f('ix_tour_analytics_tour_id'), 'tour_analytics', ['tour_id'], unique=False)
    op.create_table('tour_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('tour_id', sa.Integer(), nullable=False),
    sa.Column('step_id', sa.Integer(), nullable=True),
    sa.Column('feedback_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('screenshot_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('admin_response', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['step_id'], ['tour_steps.id'], ),
    sa.ForeignKeyConstraint(['tour_id'], ['guided_tours.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tour_feedback_tour_id'), 'tour_feedback', ['tour_id'], unique=False)
    op.create_index(op.f('ix_tour_feedback_user_id'), 'tour_feedback', ['user_id'], unique=False)
    op.create_table('conversations',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sa.Enum('DIRECT', 'GROUP', 'SUPPORT', name='conversationtype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'ARCHIVED', 'BLOCKED', 'DELETED', name='conversationstatus'), nullable=False),
    sa.Column('participant_ids', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('last_message_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_message_preview', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_message_sender_id', sa.Integer(), nullable=True),
    sa.Column('total_messages', sa.Integer(), nullable=False),
    sa.Column('related_opportunity_id', sa.Integer(), nullable=True),
    sa.Column('related_application_id', sa.Integer(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('entity_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['related_application_id'], ['applications.id'], ),
    sa.ForeignKeyConstraint(['related_opportunity_id'], ['opportunities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversations_status'), 'conversations', ['status'], unique=False)
    op.create_table('reviews',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('review_type', sa.Enum('VOLUNTEER_TO_ORG', 'ORG_TO_VOLUNTEER', 'OPPORTUNITY_REVIEW', name='reviewtype'), nullable=False),
    sa.Column('reviewer_id', sa.Integer(), nullable=False),
    sa.Column('reviewed_organization_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_volunteer_id', sa.Integer(), nullable=True),
    sa.Column('reviewed_opportunity_id', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('communication_rating', sa.Float(), nullable=True),
    sa.Column('professionalism_rating', sa.Float(), nullable=True),
    sa.Column('impact_rating', sa.Float(), nullable=True),
    sa.Column('organization_rating', sa.Float(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'HIDDEN', 'FLAGGED', 'DELETED', name='reviewstatus'), nullable=False),
    sa.Column('anonymous', sa.Boolean(), nullable=False),
    sa.Column('related_application_id', sa.Integer(), nullable=True),
    sa.Column('volunteer_experience_duration', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('flagged_count', sa.Integer(), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=False),
    sa.Column('helpful_votes', sa.Integer(), nullable=False),
    sa.Column('total_votes', sa.Integer(), nullable=False),
    sa.Column('response', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('response_date', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('entity_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['related_application_id'], ['applications.id'], ),
    sa.ForeignKeyConstraint(['reviewed_opportunity_id'], ['opportunities.id'], ),
    sa.ForeignKeyConstraint(['reviewed_organization_id'], ['organisations.id'], ),
    sa.ForeignKeyConstraint(['reviewed_volunteer_id'], ['volunteers.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reviews_review_type'), 'reviews', ['review_type'], unique=False)
    op.create_index(op.f('ix_reviews_reviewer_id'), 'reviews', ['reviewer_id'], unique=False)
    op.create_index(op.f('ix_reviews_status'), 'reviews', ['status'], unique=False)
    op.create_table('conversation_participants',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('last_read_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_read_message_id', sa.Integer(), nullable=True),
    sa.Column('unread_count', sa.Integer(), nullable=False),
    sa.Column('muted', sa.Boolean(), nullable=False),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=False),
    sa.Column('joined_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('left_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_participants_conversation_id'), 'conversation_participants', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_conversation_participants_user_id'), 'conversation_participants', ['user_id'], unique=False)
    op.create_table('messages',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('message_type', sa.Enum('TEXT', 'IMAGE', 'FILE', 'SYSTEM', 'NOTIFICATION', name='messagetype'), nullable=False),
    sa.Column('status', sa.Enum('SENDING', 'SENT', 'DELIVERED', 'READ', 'FAILED', name='messagestatus'), nullable=False),
    sa.Column('attachments', sa.JSON(), nullable=True),
    sa.Column('reply_to_message_id', sa.Integer(), nullable=True),
    sa.Column('thread_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('rich_content', sa.JSON(), nullable=True),
    sa.Column('reactions', sa.JSON(), nullable=True),
    sa.Column('edited_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('deleted_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('deleted_for', sa.JSON(), nullable=True),
    sa.Column('system_data', sa.JSON(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('entity_metadata', sa.JSON(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('delivered_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('read_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.ForeignKeyConstraint(['reply_to_message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_conversation_id'), 'messages', ['conversation_id'], unique=False)
    op.create_index(op.f('ix_messages_sender_id'), 'messages', ['sender_id'], unique=False)
    op.create_index(op.f('ix_messages_status'), 'messages', ['status'], unique=False)
    op.create_index(op.f('ix_messages_thread_id'), 'messages', ['thread_id'], unique=False)
    op.create_table('review_flags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('flagger_id', sa.Integer(), nullable=False),
    sa.Column('reason', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resolved_by', sa.Integer(), nullable=True),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['flagger_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['review_id'], ['reviews.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_review_flags_flagger_id'), 'review_flags', ['flagger_id'], unique=False)
    op.create_index(op.f('ix_review_flags_review_id'), 'review_flags', ['review_id'], unique=False)
    op.create_table('review_votes',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('review_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('helpful', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['review_id'], ['reviews.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_review_votes_review_id'), 'review_votes', ['review_id'], unique=False)
    op.create_index(op.f('ix_review_votes_user_id'), 'review_votes', ['user_id'], unique=False)
    op.create_table('message_read_receipts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('read_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_read_receipts_message_id'), 'message_read_receipts', ['message_id'], unique=False)
    op.create_index(op.f('ix_message_read_receipts_user_id'), 'message_read_receipts', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_message_read_receipts_user_id'), table_name='message_read_receipts')
    op.drop_index(op.f('ix_message_read_receipts_message_id'), table_name='message_read_receipts')
    op.drop_table('message_read_receipts')
    op.drop_index(op.f('ix_review_votes_user_id'), table_name='review_votes')
    op.drop_index(op.f('ix_review_votes_review_id'), table_name='review_votes')
    op.drop_table('review_votes')
    op.drop_index(op.f('ix_review_flags_review_id'), table_name='review_flags')
    op.drop_index(op.f('ix_review_flags_flagger_id'), table_name='review_flags')
    op.drop_table('review_flags')
    op.drop_index(op.f('ix_messages_thread_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_status'), table_name='messages')
    op.drop_index(op.f('ix_messages_sender_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_conversation_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_conversation_participants_user_id'), table_name='conversation_participants')
    op.drop_index(op.f('ix_conversation_participants_conversation_id'), table_name='conversation_participants')
    op.drop_table('conversation_participants')
    op.drop_index(op.f('ix_reviews_status'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_reviewer_id'), table_name='reviews')
    op.drop_index(op.f('ix_reviews_review_type'), table_name='reviews')
    op.drop_table('reviews')
    op.drop_index(op.f('ix_conversations_status'), table_name='conversations')
    op.drop_table('conversations')
    op.drop_index(op.f('ix_tour_feedback_user_id'), table_name='tour_feedback')
    op.drop_index(op.f('ix_tour_feedback_tour_id'), table_name='tour_feedback')
    op.drop_table('tour_feedback')
    op.drop_index(op.f('ix_tour_analytics_tour_id'), table_name='tour_analytics')
    op.drop_index(op.f('ix_tour_analytics_date'), table_name='tour_analytics')
    op.drop_table('tour_analytics')
    op.drop_index(op.f('ix_notification_delivery_logs_notification_id'), table_name='notification_delivery_logs')
    op.drop_table('notification_delivery_logs')
    op.drop_index(op.f('ix_demo_feedback_scenario_id'), table_name='demo_feedback')
    op.drop_table('demo_feedback')
    op.drop_index(op.f('ix_demo_analytics_scenario_id'), table_name='demo_analytics')
    op.drop_index(op.f('ix_demo_analytics_date'), table_name='demo_analytics')
    op.drop_table('demo_analytics')
    op.drop_index(op.f('ix_applications_volunteer_id'), table_name='applications')
    op.drop_index(op.f('ix_applications_status'), table_name='applications')
    op.drop_index(op.f('ix_applications_opportunity_id'), table_name='applications')
    op.drop_table('applications')
    op.drop_index(op.f('ix_user_tour_progress_user_id'), table_name='user_tour_progress')
    op.drop_index(op.f('ix_user_tour_progress_tour_id'), table_name='user_tour_progress')
    op.drop_table('user_tour_progress')
    op.drop_index(op.f('ix_tour_steps_tour_id'), table_name='tour_steps')
    op.drop_index(op.f('ix_tour_steps_step_id'), table_name='tour_steps')
    op.drop_table('tour_steps')
    op.drop_index(op.f('ix_skill_verifications_volunteer_id'), table_name='skill_verifications')
    op.drop_index(op.f('ix_skill_verifications_status'), table_name='skill_verifications')
    op.drop_index(op.f('ix_skill_verifications_skill_name'), table_name='skill_verifications')
    op.drop_table('skill_verifications')
    op.drop_index(op.f('ix_push_notifications_user_id'), table_name='push_notifications')
    op.drop_index(op.f('ix_push_notifications_notification_id'), table_name='push_notifications')
    op.drop_table('push_notifications')
    op.drop_index(op.f('ix_opportunities_title'), table_name='opportunities')
    op.drop_index(op.f('ix_opportunities_state'), table_name='opportunities')
    op.drop_index(op.f('ix_opportunities_org_id'), table_name='opportunities')
    op.drop_index(op.f('ix_opportunities_location'), table_name='opportunities')
    op.drop_index(op.f('ix_opportunities_country'), table_name='opportunities')
    op.drop_table('opportunities')
    op.drop_index(op.f('ix_file_permissions_user_id'), table_name='file_permissions')
    op.drop_index(op.f('ix_file_permissions_organization_id'), table_name='file_permissions')
    op.drop_index(op.f('ix_file_permissions_file_id'), table_name='file_permissions')
    op.drop_table('file_permissions')
    op.drop_index(op.f('ix_file_access_logs_user_id'), table_name='file_access_logs')
    op.drop_index(op.f('ix_file_access_logs_file_id'), table_name='file_access_logs')
    op.drop_table('file_access_logs')
    op.drop_index(op.f('ix_demo_steps_step_id'), table_name='demo_steps')
    op.drop_index(op.f('ix_demo_steps_scenario_id'), table_name='demo_steps')
    op.drop_table('demo_steps')
    op.drop_index(op.f('ix_demo_runs_session_id'), table_name='demo_runs')
    op.drop_index(op.f('ix_demo_runs_scenario_id'), table_name='demo_runs')
    op.drop_index(op.f('ix_demo_runs_run_id'), table_name='demo_runs')
    op.drop_table('demo_runs')
    op.drop_index(op.f('ix_volunteers_user_id'), table_name='volunteers')
    op.drop_index(op.f('ix_volunteers_location'), table_name='volunteers')
    op.drop_index(op.f('ix_volunteers_full_name'), table_name='volunteers')
    op.drop_index(op.f('ix_volunteers_country'), table_name='volunteers')
    op.drop_table('volunteers')
    op.drop_index(op.f('ix_user_badges_user_id'), table_name='user_badges')
    op.drop_index(op.f('ix_user_badges_badge_id'), table_name='user_badges')
    op.drop_table('user_badges')
    op.drop_index(op.f('ix_user_activity_user_id'), table_name='user_activity')
    op.drop_index(op.f('ix_user_activity_date'), table_name='user_activity')
    op.drop_table('user_activity')
    op.drop_index(op.f('ix_tour_templates_template_id'), table_name='tour_templates')
    op.drop_table('tour_templates')
    op.drop_index(op.f('ix_push_subscriptions_user_id'), table_name='push_subscriptions')
    op.drop_index(op.f('ix_push_subscriptions_subscription_id'), table_name='push_subscriptions')
    op.drop_index(op.f('ix_push_subscriptions_endpoint'), table_name='push_subscriptions')
    op.drop_table('push_subscriptions')
    op.drop_index(op.f('ix_organisations_user_id'), table_name='organisations')
    op.drop_index(op.f('ix_organisations_name'), table_name='organisations')
    op.drop_index(op.f('ix_organisations_location'), table_name='organisations')
    op.drop_index(op.f('ix_organisations_email'), table_name='organisations')
    op.drop_index(op.f('ix_organisations_country'), table_name='organisations')
    op.drop_table('organisations')
    op.drop_index(op.f('ix_notification_settings_user_id'), table_name='notification_settings')
    op.drop_table('notification_settings')
    op.drop_index(op.f('ix_guided_tours_tour_id'), table_name='guided_tours')
    op.drop_table('guided_tours')
    op.drop_index(op.f('ix_file_uploads_uploaded_by'), table_name='file_uploads')
    op.drop_index(op.f('ix_file_uploads_upload_category'), table_name='file_uploads')
    op.drop_index(op.f('ix_file_uploads_status'), table_name='file_uploads')
    op.drop_table('file_uploads')
    op.drop_index(op.f('ix_demo_templates_template_id'), table_name='demo_templates')
    op.drop_table('demo_templates')
    op.drop_index(op.f('ix_demo_scenarios_scenario_id'), table_name='demo_scenarios')
    op.drop_table('demo_scenarios')
    op.drop_index(op.f('ix_demo_assets_asset_id'), table_name='demo_assets')
    op.drop_table('demo_assets')
    op.drop_index(op.f('ix_analytics_events_user_id'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_timestamp'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_session_id'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_event_type'), table_name='analytics_events')
    op.drop_index(op.f('ix_analytics_events_event_name'), table_name='analytics_events')
    op.drop_table('analytics_events')
    op.drop_index(op.f('ix_users_status'), table_name='users')
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_performance_metrics_timestamp'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_metric_type'), table_name='performance_metrics')
    op.drop_index(op.f('ix_performance_metrics_metric_name'), table_name='performance_metrics')
    op.drop_table('performance_metrics')
    op.drop_index(op.f('ix_notificationtemplate_template_id'), table_name='notificationtemplate')
    op.drop_table('notificationtemplate')
    op.drop_index(op.f('ix_notification_analytics_date'), table_name='notification_analytics')
    op.drop_table('notification_analytics')
    op.drop_index(op.f('ix_daily_stats_date'), table_name='daily_stats')
    op.drop_table('daily_stats')
    op.drop_index(op.f('ix_badges_name'), table_name='badges')
    op.drop_table('badges')
    # ### end Alembic commands ###
